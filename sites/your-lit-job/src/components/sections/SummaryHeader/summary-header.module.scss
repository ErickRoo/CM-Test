/* stylelint-disable at-rule-no-vendor-prefix */
/* stylelint-disable property-no-unknown */
/* stylelint-disable property-no-vendor-prefix */
@use 'sass:list';
@use 'sass:map';
@use '../../../styles/utils';

$colors: utils.get-skills-colors();
$left-y: 30px, 85px, 165px, 295px, 385px;
$left-x: 0%, 60%, 30%, 15%, 45%;
$left-position: (
  top: $left-y,
  right: $left-x,
);
$right-y: 25px, 75px, 190px, 390px, 290px;
$right-x: 0%, 60%, 35%, 60%, 15%;
$right-position: (
  top: $right-y,
  left: $right-x,
);

.shield {
  position: relative;
}

.bar {
  transform-style: preserve-3d;
  position: sticky;
  top: 0;
  z-index: 5;
}

.background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: #eff2f8;

  > div[data-gatsby-image-wrapper] {
    width: 100%;
  }
}

.container {
  position: relative;
  display: flex;
  justify-content: center;
}

.icons {
  position: relative;
  width: 100%;

  > div[data-gatsby-image-wrapper] {
    position: absolute;
  }

  &__left {
    order: 1;

    > div[data-gatsby-image-wrapper] {
      $listt: map.get($left-position, 'top');
      $listr: map.get($left-position, 'right');
      @for $pos from 1 through 5 {
        &:nth-child(#{$pos}) {
          top: list.nth($listt, $pos);
          right: list.nth($listr, $pos);
        }
      }
    }
  }

  &__right {
    order: 3;

    > div[data-gatsby-image-wrapper] {
      $listt: map.get($right-position, 'top');
      $listl: map.get($right-position, 'left');
      @for $pos from 1 through 5 {
        &:nth-child(#{$pos}) {
          top: list.nth($listt, $pos);
          left: list.nth($listl, $pos);
        }
      }
    }
  }
}

.center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  order: 2;
  width: 100%;
  height: 100%;
  text-align: center;

  h1 {
    display: flex;
    padding-top: 50px;
    font-size: 48px;
    font-weight: utils.$extrabold-weight;
  }

  p {
    font-family: 'Libre Baskerville', serif;
    font-size: 18px;
    font-weight: utils.$regular-weight;
    line-height: 32px;
  }
}

.buttonsSection {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  padding-bottom: 15px;
  margin: auto;
}

.button {
  display: inherit;
  height: min-content;
  margin: 15px 5px 0;
  list-style-type: none;
  border-radius: 20px;

  button[type='button'] {
    width: 100%;
    padding: 12px 28px;
    font-size: 18px;
    color: inherit;

    span {
      min-height: unset;
    }

    h2 {
      display: flex;
      font-weight: utils.$extrabold-weight;
      text-transform: capitalize;
    }
  }
}

.buttonAnimation {
  -webkit-animation: btn-wiggle 3s infinite;
  -moz-animation: btn-wiggle 3s infinite;
  -o-animation: btn-wiggle 3s infinite;
  animation: btn-wiggle 3s infinite;
}

/* animation */
@-webkit-keyframes btn-wiggle {
  0% {
    -webkit-transform: rotate(0deg);
  }

  5% {
    -webkit-transform: rotate(-2deg);
  }

  10% {
    -webkit-transform: rotate(2deg);
  }

  15% {
    -webkit-transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(0deg);
  }
}

@-o-keyframes btn-wiggle {
  0% {
    -webkit-transform: rotate(0deg);
  }

  5% {
    -webkit-transform: rotate(-2deg);
  }

  10% {
    -webkit-transform: rotate(2deg);
  }

  15% {
    -webkit-transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(0deg);
  }
}

@keyframes btn-wiggle {
  0% {
    -webkit-transform: rotate(0deg);
  }

  5% {
    -webkit-transform: rotate(-2deg);
  }

  10% {
    -webkit-transform: rotate(2deg);
  }

  15% {
    -webkit-transform: rotate(0deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

@include utils.bp-any(sm) {
  .bar {
    top: 62px;
  }

  .icons {
    &__left,
    &__right {
      display: none;
    }
  }

  .container {
    padding-right: utils.$pad-sm;
    padding-left: utils.$pad-sm;

    h1 {
      padding-top: utils.$pad-sm;
      font-size: 40px;
    }
  }

  .button button[type='button'] {
    padding: 12px 20px;
  }
}

@include utils.bp-any(md) {
  .button button[type='button'] {
    padding: 12px 32px;
    font-size: 18px;
  }
}

@include utils.bp-any(lg) {
  .icons {
    width: 185px;
  }

  .center {
    width: 350px;
    min-width: 350px;
  }

  .button button[type='button'] {
    padding: 9px 10px;
    font-size: 24px;
  }
}

@media (min-width: 1200px) {
  .icons {
    &__left,
    &__right {
      width: 222px;
    }
  }

  .center {
    width: 550px;
    min-width: 550px;
  }

  .button button[type='button'] {
    padding: 12px 28px;
  }
}

@media (min-width: 1400px) {
  .center {
    width: 620px;

    p {
      white-space: break-spaces;
    }
  }

  .button button[type='button'] {
    font-size: 28px;
  }
}
